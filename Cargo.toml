[workspace]
resolver = "2"

package.version = "0.8.1"
package.edition = "2021"
package.license = "Apache-2.0"

members = ["crates/*"]

[workspace.dependencies]
ndc-sdk-core = { path = "../sdk-core" }
ndc-models = { git = "http://github.com/hasura/ndc-spec.git", tag = "v0.2.10" }
ndc-test = { git = "http://github.com/hasura/ndc-spec.git", tag = "v0.2.10" }

anyhow = "1"
async-trait = "0.1"
axum = { version = "0.7", features = ["http2"] }
axum-extra = "0.9"
bytes = "1"
clap = { version = "4", features = ["derive", "env"] }
http = "1"
mime = "0.3"
opentelemetry = "0.30"
opentelemetry-http = "0.30"
opentelemetry-otlp = { version = "0.30", features = [
  "reqwest-client",
  "grpc-tonic",
  "gzip-tonic",
  "tls",
  "tls-roots",
  "http-proto",
] }
opentelemetry-semantic-conventions = "0.16"
opentelemetry_sdk = { version = "0.30", features = ["rt-tokio"] }
opentelemetry-zipkin = "0.30"
prometheus = "0.14"
# Adding the gzip/zstd features have the library send appropriate
# Accept-Encoding and automatically decompress. As of this version it doesn't
# express preference with quality (q) values, but we'd prefer zstd always
reqwest = { version = "0.12", features = ["gzip", "zstd", "json"] }
semver = "1"
serde = { version = "1", features = ["derive"] }
serde_json = { version = "1", features = ["raw_value"] }
thiserror = "1"
tokio = { version = "1", features = [
  "fs",
  "macros",
  "rt-multi-thread",
  "signal",
] }
tokio-test = "0.4"
tower-http = { version = "0.6", features = [
  "cors",
  "limit",
  "trace",
  "validate-request",
  "compression-gzip",
  "compression-zstd",
] }
tracing = "0.1"
tracing-opentelemetry = "0.31"
tracing-subscriber = { version = "0.3", default-features = false, features = [
  "ansi",
  "env-filter",
  "fmt",
  "json",
] }
url = "2"


[workspace.lints.clippy]
all = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
# disable certain pedantic warnings
doc_markdown = { level = "allow" }
missing_errors_doc = { level = "allow" }
missing_panics_doc = { level = "allow" }
module_name_repetitions = { level = "allow" }
must_use_candidate = { level = "allow" }
wildcard_imports = { level = "allow" }

[package]
name = "ndc-sdk"
version.workspace = true
edition.workspace = true
license.workspace = true

[lints]
workspace = true

[lib]
name = "ndc_sdk"
path = "src/lib.rs"

[[bin]]
name = "ndc_hub_example"
path = "bin/main.rs"

[features]
default = ["native-tls", "ndc-test"]

native-tls = ["reqwest/native-tls"]
rustls = ["reqwest/rustls"]

ndc-test = ["dep:ndc-test", "ndc-sdk-core/ndc-test"]

[dependencies]
ndc-sdk-core = { path = "../sdk-core", default-features = false, features = ["axum"]}
ndc-models = { workspace = true }
ndc-test = { workspace = true, optional = true }

async-trait = { workspace = true }
axum = { workspace = true, features = ["http2"] }
axum-extra = { workspace = true }
clap = { workspace = true, features = ["derive", "env"] }
http = { workspace = true }
opentelemetry = { workspace = true }
opentelemetry-http = { workspace = true }
opentelemetry-otlp = { workspace = true, features = ["reqwest-client", "gzip-tonic", "tls", "tls-roots", "http-proto"] }
opentelemetry-semantic-conventions = { workspace = true }
opentelemetry_sdk = { workspace = true, features = ["rt-tokio"] }
opentelemetry-zipkin = { workspace = true }
prometheus = { workspace = true }
reqwest = { workspace = true }
serde_json = { workspace = true, features = ["raw_value"] }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["fs", "macros", "rt-multi-thread", "signal"] }
tower-http = { workspace = true, features = ["cors", "limit", "trace", "validate-request"] }
tracing = { workspace = true }
tracing-opentelemetry = { workspace = true }
tracing-subscriber = { workspace = true, default-features = false, features = ["ansi", "env-filter", "fmt", "json"] }
url = { workspace = true }

[dev-dependencies]
